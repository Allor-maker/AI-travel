import logging
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import (
    ApplicationBuilder, 
    ContextTypes, 
    CommandHandler, 
    MessageHandler, 
    filters
)

# --- –ù–ê–°–¢–†–û–ô–ö–ò ---
# –í–ê–ñ–ù–û: –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ —Ç–æ–∫–µ–Ω –ª—É—á—à–µ –±—Ä–∞—Ç—å –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!
# –ù–∞–ø—Ä–∏–º–µ—Ä, token = os.environ.get("BOT_TOKEN")
TOKEN = "8366243896:AAEwLamsHM11rjU-owvX7UUSQtSDE_Ucs2c" 

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∫–æ–Ω—Å–æ–ª—å
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# -------------------------------------------------------------
# 1. –û–ë–†–ê–ë–û–¢–ß–ò–ö –ö–û–ú–ê–ù–î–´ /start (–∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ª–æ–∫–∞—Ü–∏—é)
# -------------------------------------------------------------
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ —Å–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –∑–∞–ø—Ä–æ—Å–∞ –ª–æ–∫–∞—Ü–∏–∏."""
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –æ–¥–Ω–æ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π
    keyboard = [
        [
            KeyboardButton(
                text="üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", 
                request_location=True # !!! –ö–ª—é—á–µ–≤–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
            )
        ]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)
    
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –î–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞ –º–Ω–µ –Ω—É–∂–Ω—ã —Ç–≤–æ–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º —Ç–µ–∫—É—â–∏–º –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º.",
        reply_markup=reply_markup
    )

# -------------------------------------------------------------
# 2. –û–ë–†–ê–ë–û–¢–ß–ò–ö –°–û–û–ë–©–ï–ù–ò–Ø –° –ö–û–û–†–î–ò–ù–ê–¢–ê–ú–ò (LOCATION)
# -------------------------------------------------------------
async def handle_location(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤—ã–≤–æ–¥–∏—Ç –∏—Ö."""
    
    # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç Location –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    user_location = update.message.location
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —à–∏—Ä–æ—Ç—É (latitude) –∏ –¥–æ–ª–≥–æ—Ç—É (longitude)
    latitude = user_location.latitude
    longitude = user_location.longitude
    
    logger.info(f"–ü–æ–ª—É—á–µ–Ω—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {update.effective_user.id}: LAT={latitude}, LON={longitude}")

    # --- –ó–î–ï–°–¨ –ë–£–î–ï–¢ –í–ê–®–ê –õ–û–ì–ò–ö–ê ---
    # 1. –ó–∞–ø—Ä–æ—Å –∫ LLM –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –æ–Ω –±—ã–ª –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –ª–æ–∫–∞—Ü–∏–∏)
    # 2. –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (PostgreSQL) –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–∑–Ω–∞–∫–æ–≤/—Ç–æ—á–µ–∫ –º–∞—Ä—à—Ä—É—Ç–∞
    # 3. –í—ã–∑–æ–≤ Maps API –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞
    # ---------------------------------
    
    await update.message.reply_text(
        f"–°–ø–∞—Å–∏–±–æ! –Ø –ø–æ–ª—É—á–∏–ª —Ç–≤–æ–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:\n"
        f"–®–∏—Ä–æ—Ç–∞ (Lat): `{latitude}`\n"
        f"–î–æ–ª–≥–æ—Ç–∞ (Lon): `{longitude}`\n\n"
        "–¢–µ–ø–µ—Ä—å —è –º–æ–≥—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Ö –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞."
    )
    
# -------------------------------------------------------------
# 3. –û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ó–ê–ü–£–°–ö–ê
# -------------------------------------------------------------
def main() -> None:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞."""
    
    # 1. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    application = ApplicationBuilder().token(TOKEN).build()

    # 2. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
    application.add_handler(CommandHandler("start", start))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ç–∏–ø–æ–º content_types='location'
    # –≠—Ç–æ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏—Ç –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é
    application.add_handler(MessageHandler(filters.LOCATION, handle_location))

    # 3. –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ (Polling)
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...")
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == '__main__':
    main()