version: '3.8'

services:
  # 1. СЕРВИС POSTGIS (База данных)
  db:
    image: postgis/postgis:15-3.3
    restart: always
    container_name: route_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: routing_db
    volumes:
      # Том для хранения данных БД между перезапусками
      - postgres_data:/var/lib/postgresql/data
      # Копируем SQL-скрипт инициализации в специальную директорию
      - ./app/init_bd.sql:/docker-entrypoint-initdb.d/init.sql
      # Копируем данные CSV, чтобы SQL-скрипт мог их найти
      - ./data:/data
    ports:
      - "5432:5432" # Для отладки: доступ к БД с хост-машины
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d routing_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # 2. СЕРВИС ПРИЛОЖЕНИЯ (Python Bot)
  app:
    build: .
    container_name: route_planner_app
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy # Запускать app ТОЛЬКО после того, как БД будет готова
        
    env_file:
      - .env
      
    environment:
      # Переменные для подключения к БД внутри Docker сети
      DB_HOST: db 
      DB_NAME: routing_db
      DB_USER: user
      DB_PASSWORD: password
      
    # Просто запускаем бота. Инициализация уже произошла в контейнере db.
    command: ["python", "main.py"]

volumes:
  postgres_data: